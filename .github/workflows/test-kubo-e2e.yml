name: Test Kubo (e2e)

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        target: ['latest', 'master', 'fix/range-suffix'] # TODO: remove fix branch before merge
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write  # Required for commenting on pull requests
    steps:
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - uses: actions/checkout@v3
        with:
          path: 'gateway-conformance'
      - name: Extract fixtures
        uses: ./gateway-conformance/.github/actions/extract-fixtures
        with:
          output: fixtures
      - run: go install github.com/ipfs/kubo/cmd/ipfs@${{ matrix.target }}
        shell: bash
        env:
          GOPROXY: direct
      - name: Configure Kubo Gateway
        run: |
          ipfs init;
          source ./gateway-conformance/kubo-config.example.sh "$(pwd)/fixtures"
          echo "IPFS_NS_MAP=${IPFS_NS_MAP}" >> $GITHUB_ENV
        # note: the IPFS_NS_MAP set above will be passed the daemon
      - uses: ipfs/start-ipfs-daemon-action@v1
        with:
          args: '--offline'
          wait-for-addrs: false
      - name: Provision Kubo Gateway
        run: |
          # Import car files
          find ./fixtures -name '*.car' -exec ipfs dag import --pin-roots=false {} \;

          # Import ipns records
          records=$(find ./fixtures -name '*.ipns-record')
          for record in $records
          do
              key=$(basename -s .ipns-record "$record" | cut -d'_' -f1)
              ipfs routing put --allow-offline "/ipns/$key" "$record"
          done
      - name: Run the tests
        uses: ./gateway-conformance/.github/actions/test
        with:
          gateway-url: http://127.0.0.1:8080
          subdomain-url: http://example.com:8080
          json: output.json
          xml: output.xml
          html: output.html
          markdown: output.md
          accept-test-failure: true
      - name: Set summary
        run: cat ./output.md >> $GITHUB_STEP_SUMMARY
      - name: Prepare Comment
        if: github.event.pull_request
        env:
          TARGET: ${{ matrix.target }}
        run: |
          echo "Results against Kubo ${{ matrix.target }}:" > comment.md
          echo "(check the action's summary for the full results)" >> comment.md

          # Strip everything after the results table
          cat output.md | sed '/Failures\/Errors/,$d' >> comment.md
      - name: Find latest comment
        id: find-comment
        if: github.event.pull_request
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "Results against Kubo ${{ matrix.target }}"
      - name: Create comment
        if: github.event.pull_request
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body-path: comment.md
      - name: Upload one-page HTML report
        uses: actions/upload-artifact@v4
        with:
          name: conformance-${{ matrix.target }}.html
          path: ./output.html
